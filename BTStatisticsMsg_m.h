//
// Generated file, do not edit! Created by opp_msgc 4.2 from applications/BitTorrent/BTStatisticsMsg.msg.
//

#ifndef _BTSTATISTICSMSG_M_H_
#define _BTSTATISTICSMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "../tcpapp/GenericAppMsg_m.h"
// }}



/**
 * Class generated from <tt>applications/BitTorrent/BTStatisticsMsg.msg</tt> by opp_msgc.
 * <pre>
 * message BTStatisticsDWLMsg extends GenericAppMsg
 * {
 *     @omitGetVerb(true);
 * 
 *     double downloadTime;		
 *     double remainingBlocks;		
 * 
 * }
 * </pre>
 */
class BTStatisticsDWLMsg : public ::GenericAppMsg
{
  protected:
    double downloadTime_var;
    double remainingBlocks_var;

  private:
    void copy(const BTStatisticsDWLMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTStatisticsDWLMsg&);

  public:
    BTStatisticsDWLMsg(const char *name=NULL, int kind=0);
    BTStatisticsDWLMsg(const BTStatisticsDWLMsg& other);
    virtual ~BTStatisticsDWLMsg();
    BTStatisticsDWLMsg& operator=(const BTStatisticsDWLMsg& other);
    virtual BTStatisticsDWLMsg *dup() const {return new BTStatisticsDWLMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double downloadTime() const;
    virtual void setDownloadTime(double downloadTime);
    virtual double remainingBlocks() const;
    virtual void setRemainingBlocks(double remainingBlocks);
};

inline void doPacking(cCommBuffer *b, BTStatisticsDWLMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTStatisticsDWLMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrent/BTStatisticsMsg.msg</tt> by opp_msgc.
 * <pre>
 * message BTStatisticsNumProvidersMsg extends GenericAppMsg
 * {
 *     @omitGetVerb(true);
 * 
 *     int numPeers;
 * }
 * </pre>
 */
class BTStatisticsNumProvidersMsg : public ::GenericAppMsg
{
  protected:
    int numPeers_var;

  private:
    void copy(const BTStatisticsNumProvidersMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTStatisticsNumProvidersMsg&);

  public:
    BTStatisticsNumProvidersMsg(const char *name=NULL, int kind=0);
    BTStatisticsNumProvidersMsg(const BTStatisticsNumProvidersMsg& other);
    virtual ~BTStatisticsNumProvidersMsg();
    BTStatisticsNumProvidersMsg& operator=(const BTStatisticsNumProvidersMsg& other);
    virtual BTStatisticsNumProvidersMsg *dup() const {return new BTStatisticsNumProvidersMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int numPeers() const;
    virtual void setNumPeers(int numPeers);
};

inline void doPacking(cCommBuffer *b, BTStatisticsNumProvidersMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTStatisticsNumProvidersMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrent/BTStatisticsMsg.msg</tt> by opp_msgc.
 * <pre>
 * message BTStatisticsNumSeederBlocksMsg extends GenericAppMsg
 * {
 *     @omitGetVerb(true);
 * 
 *     double numSeederBlocks;
 * }
 * </pre>
 */
class BTStatisticsNumSeederBlocksMsg : public ::GenericAppMsg
{
  protected:
    double numSeederBlocks_var;

  private:
    void copy(const BTStatisticsNumSeederBlocksMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTStatisticsNumSeederBlocksMsg&);

  public:
    BTStatisticsNumSeederBlocksMsg(const char *name=NULL, int kind=0);
    BTStatisticsNumSeederBlocksMsg(const BTStatisticsNumSeederBlocksMsg& other);
    virtual ~BTStatisticsNumSeederBlocksMsg();
    BTStatisticsNumSeederBlocksMsg& operator=(const BTStatisticsNumSeederBlocksMsg& other);
    virtual BTStatisticsNumSeederBlocksMsg *dup() const {return new BTStatisticsNumSeederBlocksMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double numSeederBlocks() const;
    virtual void setNumSeederBlocks(double numSeederBlocks);
};

inline void doPacking(cCommBuffer *b, BTStatisticsNumSeederBlocksMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTStatisticsNumSeederBlocksMsg& obj) {obj.parsimUnpack(b);}


#endif // _BTSTATISTICSMSG_M_H_
